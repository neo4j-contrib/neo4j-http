#
# Copyright 2022 the original author or authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

spring.neo4j.uri=${NEO4J_URI:neo4j://localhost:7687}
spring.neo4j.authentication.username=${NEO4J_USERNAME:neo4j}
spring.neo4j.authentication.password=${NEO4J_PASSWORD:secret}

management.endpoints.web.exposure.include=health,metrics
management.endpoint.health.probes.enabled=true
management.endpoint.health.show-details=when_authorized
management.endpoint.health.group.readiness.include=*
management.endpoint.health.group.readiness.show-components=never

server.compression.enabled=true
server.compression.min-response-size=1024

# This is necessary to make all implementations of org.neo4j.http.db.QueryEvaluator play nicely with our base interface
# org.neo4j.http.db.AbstractQueryEvaluator. Otherwise, the CGLIB based proxies will go nuts over it and for the cached methods
# another base class will mess up the inheritance. One of the symptoms is that the shared state will not be initialized, see
# https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#aop-proxying
# It does not seem to be related to the constructor and Objenesis.
# While `org.springframework.cache.annotation.EnableCaching#proxyTargetClass` actually defaults to `false`, this global
# setting seems to override this again otherwise

spring.aop.proxy-target-class=false
